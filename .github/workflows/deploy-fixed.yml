name: Deploy Chemarine Website

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  AWS_REGION: eu-west-2

jobs:
  # Job for PR builds (build only, no deploy)
  build-and-test:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-files
          path: dist/
          retention-days: 1

  # Job for main branch (build and deploy)
  deploy:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Get Terraform Outputs
        id: terraform
        working-directory: terraform
        run: |
          echo "s3-bucket=$(terraform output -raw s3_bucket_name)" >> $GITHUB_OUTPUT
          echo "cloudfront-id=$(terraform output -raw cloudfront_distribution_id)" >> $GITHUB_OUTPUT
          echo "website-url=$(terraform output -raw website_url)" >> $GITHUB_OUTPUT

      - name: Deploy to S3
        run: |
          # Sync all files except index.html with long cache headers
          aws s3 sync dist/ s3://${{ steps.terraform.outputs.s3-bucket }} \
            --exclude "index.html" \
            --exclude "*.map" \
            --cache-control "public, max-age=31536000, immutable" \
            --delete
            
          # Upload index.html with no-cache headers for SPA routing
          aws s3 cp dist/index.html s3://${{ steps.terraform.outputs.s3-bucket }}/index.html \
            --cache-control "public, max-age=0, must-revalidate" \
            --content-type "text/html"

      - name: Invalidate CloudFront
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ steps.terraform.outputs.cloudfront-id }} \
            --paths "/*"

      - name: Deployment complete
        run: |
          echo "ðŸš€ Deployment successful!"
          echo "Website URL: ${{ steps.terraform.outputs.website-url }}"
